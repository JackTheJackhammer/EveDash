<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PortraitBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCACAAIADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD41EfrUixZ7YqxHDip44PagCskPtUqwZq4lvU6W3t+dAFFbfOO
        KkW3rQW2pzxJDGzyEIijLMxwAKAKH2f2pRbe1YGrePYLdmjsIRcEcebJkL+A6n9K56fxhq07Z+1eWP7s
        agD+VAHoBth6Un2auCtvGeq27AmcTL/dkQEfpzXT6N45tL51ivEFpKeA+cofx7f55oA1Tb+1Rm39q2Ps
        wYAjBHbFRta8cUAY7W+O1QtB7VsvbfjUD2/tQBkNDULR49q1ng9qrvB7UAXY4PWrMdvntirMVvircVt0
        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
</value>
  </data>
  <metadata name="MenuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>